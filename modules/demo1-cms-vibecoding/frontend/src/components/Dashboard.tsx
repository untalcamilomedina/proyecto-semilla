// CMS Dashboard Component - Generated by Vibecoding
import React, { useState, useEffect } from 'react';
import { Article, Category, DashboardStats } from '../types';
import Button from './ui/Button';

const Dashboard: React.FC = () => {
  const [stats, setStats] = useState<DashboardStats | null>(null);
  const [recentArticles, setRecentArticles] = useState<Article[]>([]);
  const [categories, setCategories] = useState<Category[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadDashboardData();
  }, []);

  const loadDashboardData = async () => {
    try {
      setLoading(true);

      // Mock data - in real implementation would fetch from API
      const mockStats: DashboardStats = {
        total_articles: 12,
        published_articles: 8,
        draft_articles: 4,
        total_views: 1250,
        total_comments: 23,
        popular_categories: [
          { name: 'Tutoriales', count: 5 },
          { name: 'Noticias', count: 3 },
          { name: 'General', count: 2 }
        ],
        recent_activity: [
          {
            type: 'article_published',
            title: 'Nuevo tutorial de React',
            timestamp: '2024-01-15T10:30:00Z'
          },
          {
            type: 'comment_added',
            title: 'Comentario en art√≠culo principal',
            timestamp: '2024-01-15T09:15:00Z'
          }
        ]
      };

      const mockArticles: Article[] = [
        {
          id: '1',
          tenant_id: 'tenant-1',
          title: 'Bienvenido al CMS',
          slug: 'bienvenido-cms',
          content: 'Contenido de bienvenida...',
          excerpt: 'Primer art√≠culo del CMS',
          status: 'published',
          author_id: 'user-1',
          tags: ['bienvenida', 'cms'],
          created_at: '2024-01-15T08:00:00Z',
          updated_at: '2024-01-15T08:00:00Z'
        }
      ];

      const mockCategories: Category[] = [
        {
          id: 'cat-1',
          tenant_id: 'tenant-1',
          name: 'Tutoriales',
          slug: 'tutoriales',
          description: 'Gu√≠as y tutoriales',
          color: '#10B981',
          order_index: 1,
          created_at: '2024-01-10T00:00:00Z'
        }
      ];

      setStats(mockStats);
      setRecentArticles(mockArticles);
      setCategories(mockCategories);

    } catch (error) {
      console.error('Error loading dashboard data:', error);
    } finally {
      setLoading(false);
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-6">
            <div>
              <h1 className="text-3xl font-bold text-gray-900">Dashboard CMS</h1>
              <p className="text-gray-600 mt-1">Gestiona tu contenido de manera eficiente</p>
            </div>
            <div className="flex space-x-3">
              <Button variant="outline" size="sm">
                Ver Sitio
              </Button>
              <Button variant="primary" size="sm">
                Nuevo Art√≠culo
              </Button>
            </div>
          </div>
        </div>
      </header>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center">
                  <span className="text-white text-sm font-semibold">üìù</span>
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">Total Art√≠culos</p>
                <p className="text-2xl font-semibold text-gray-900">{stats?.total_articles || 0}</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-green-500 rounded-md flex items-center justify-center">
                  <span className="text-white text-sm font-semibold">‚úÖ</span>
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">Publicados</p>
                <p className="text-2xl font-semibold text-gray-900">{stats?.published_articles || 0}</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-yellow-500 rounded-md flex items-center justify-center">
                  <span className="text-white text-sm font-semibold">üëÅÔ∏è</span>
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">Vistas Totales</p>
                <p className="text-2xl font-semibold text-gray-900">{stats?.total_views || 0}</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-purple-500 rounded-md flex items-center justify-center">
                  <span className="text-white text-sm font-semibold">üí¨</span>
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">Comentarios</p>
                <p className="text-2xl font-semibold text-gray-900">{stats?.total_comments || 0}</p>
              </div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Recent Articles */}
          <div className="lg:col-span-2">
            <div className="bg-white rounded-lg shadow">
              <div className="px-6 py-4 border-b border-gray-200">
                <div className="flex items-center justify-between">
                  <h3 className="text-lg font-medium text-gray-900">Art√≠culos Recientes</h3>
                  <Button variant="outline" size="sm">
                    Ver Todos
                  </Button>
                </div>
              </div>
              <div className="divide-y divide-gray-200">
                {recentArticles.map((article) => (
                  <div key={article.id} className="px-6 py-4 hover:bg-gray-50">
                    <div className="flex items-center justify-between">
                      <div className="flex-1">
                        <h4 className="text-sm font-medium text-gray-900">{article.title}</h4>
                        <p className="text-sm text-gray-600 mt-1">{article.excerpt}</p>
                        <div className="flex items-center mt-2 text-xs text-gray-500">
                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                            article.status === 'published' ? 'bg-green-100 text-green-800' :
                            article.status === 'draft' ? 'bg-yellow-100 text-yellow-800' :
                            'bg-blue-100 text-blue-800'
                          }`}>
                            {article.status === 'published' ? 'Publicado' :
                             article.status === 'draft' ? 'Borrador' : 'Revisi√≥n'}
                          </span>
                          <span className="ml-2">
                            {new Date(article.created_at).toLocaleDateString()}
                          </span>
                        </div>
                      </div>
                      <div className="flex space-x-2">
                        <Button variant="ghost" size="sm">
                          Editar
                        </Button>
                        <Button variant="ghost" size="sm">
                          Ver
                        </Button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* Quick Actions */}
            <div className="bg-white rounded-lg shadow p-6">
              <h3 className="text-lg font-medium text-gray-900 mb-4">Acciones R√°pidas</h3>
              <div className="space-y-3">
                <Button variant="primary" className="w-full justify-start">
                  üìù Nuevo Art√≠culo
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  üìÅ Nueva Categor√≠a
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  üñºÔ∏è Subir Imagen
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  ‚öôÔ∏è Configuraci√≥n SEO
                </Button>
              </div>
            </div>

            {/* Popular Categories */}
            <div className="bg-white rounded-lg shadow p-6">
              <h3 className="text-lg font-medium text-gray-900 mb-4">Categor√≠as Populares</h3>
              <div className="space-y-3">
                {stats?.popular_categories.map((category, index) => (
                  <div key={index} className="flex items-center justify-between">
                    <span className="text-sm text-gray-600">{category.name}</span>
                    <span className="text-sm font-medium text-gray-900">{category.count}</span>
                  </div>
                ))}
              </div>
            </div>

            {/* Recent Activity */}
            <div className="bg-white rounded-lg shadow p-6">
              <h3 className="text-lg font-medium text-gray-900 mb-4">Actividad Reciente</h3>
              <div className="space-y-3">
                {stats?.recent_activity.map((activity, index) => (
                  <div key={index} className="flex items-start space-x-3">
                    <div className="flex-shrink-0">
                      <span className="text-sm">
                        {activity.type === 'article_published' ? 'üìù' :
                         activity.type === 'comment_added' ? 'üí¨' : 'üìÑ'}
                      </span>
                    </div>
                    <div className="flex-1 min-w-0">
                      <p className="text-sm text-gray-900">{activity.title}</p>
                      <p className="text-xs text-gray-500">
                        {new Date(activity.timestamp).toLocaleString()}
                      </p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export default Dashboard;