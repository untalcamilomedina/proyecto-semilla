version: '3.8'

services:
  # Base de datos PostgreSQL con RLS
  db:
    image: postgres:15-alpine
    container_name: proyecto_semilla_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: proyecto_semilla
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d proyecto_semilla"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - proyecto_semilla_network

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: proyecto_semilla_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - proyecto_semilla_network

  # Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: proyecto_semilla_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://admin:${DB_PASSWORD:-changeme123}@db:5432/proyecto_semilla
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key_here}
      CORS_ORIGINS: http://localhost:3000,http://frontend:3000
    volumes:
      - ./backend:/app
      - ./tests:/app/tests
      - ./pytest.ini:/app/pytest.ini
      - /app/__pycache__
    ports:
      - "7777:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - proyecto_semilla_network

  # Frontend Next.js
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: proyecto_semilla_frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:7777
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - proyecto_semilla_network

volumes:
  postgres_data:
  redis_data:

networks:
  proyecto_semilla_network:
    driver: bridge